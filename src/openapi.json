{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Lanchonete - OpenAPI 3.0",
    "description": "Este é um exemplo de uma aplicação para gerenciamento de pedidos de uma lanchonete utilizando os conceitos de Clean Architecture.",
    "contact": {
      "email": "devairft@gmail.com"
    },
    "version": "1.0.11"
  },
  "tags": [
    {
      "name": "categories",
      "description": "Everything about categoriess"
    }
  ],
  "paths": {
    "/api/v1/categories": {
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "Add a new category",
        "description": "Add a new category",
        "operationId": "addcategories",
        "requestBody": {
          "description": "Create a new category",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "desctiption"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "drik"
                  },
                  "description": {
                    "type": "string",
                    "example": "cold drik"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "drik"
                    },
                    "description": {
                      "type": "string",
                      "example": "cold drik"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "List categories",
        "description": "List categories",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "drik"
                      },
                      "description": {
                        "type": "string",
                        "example": "cold drik"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/{categoryId}": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Find category by ID",
        "description": "Returns a single category",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "ID of category to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "drik"
                    },
                    "description": {
                      "type": "string",
                      "example": "cold drik"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "categories"
        ],
        "summary": "Update category",
        "description": "Update category.",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "ID of categories to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "desctiption"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "drik"
                  },
                  "description": {
                    "type": "string",
                    "example": "cold drik"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/v1/categories/search": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Find categories by Name",
        "description": "Returns a single categories",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of categories to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "drik"
                      },
                      "description": {
                        "type": "string",
                        "example": "cold drik"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/v1/products": {
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Add a new product",
        "description": "Add a new product",
        "requestBody": {
          "description": "Create a new product",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "code",
                  "description",
                  "categoryId",
                  "price"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "beer"
                  },
                  "code": {
                    "type": "string",
                    "example": "bear-1"
                  },
                  "categoryId": {
                    "type": "integer",
                    "example": 1
                  },
                  "price": {
                    "type": "number",
                    "example": 10
                  },
                  "image": {
                    "type": "string",
                    "example": "ssssss"
                  },
                  "description": {
                    "type": "string",
                    "example": "cold beer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "beer"
                    },
                    "code": {
                      "type": "string",
                      "example": "bear-1"
                    },
                    "categoryId": {
                      "type": "integer",
                      "example": 1
                    },
                    "price": {
                      "type": "number",
                      "example": 10
                    },
                    "image": {
                      "type": "string",
                      "example": "ssssss"
                    },
                    "description": {
                      "type": "string",
                      "example": "cold beer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "products"
        ],
        "summary": "List products",
        "description": "List categories",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "beer"
                      },
                      "code": {
                        "type": "string",
                        "example": "bear-1"
                      },
                      "categoryId": {
                        "type": "integer",
                        "example": 1
                      },
                      "price": {
                        "type": "number",
                        "example": 10
                      },
                      "image": {
                        "type": "string",
                        "example": "ssssss"
                      },
                      "description": {
                        "type": "string",
                        "example": "cold beer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "categoriesId": {
            "type": "integer",
            "format": "int64",
            "example": 198772
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 7
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "example": "approved",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "order"
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 100000
          },
          "username": {
            "type": "string",
            "example": "fehguy"
          }
        }
      },
      "Categories": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "name": {
              "type": "string",
              "example": "drik"
            },
            "description": {
              "type": "string",
              "example": "cold drik"
            }
          }
        }
      },
      "categoryCreate": {
        "required": [
          "name",
          "desctiption"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "drik"
          },
          "description": {
            "type": "string",
            "example": "cold drik"
          }
        }
      },
      "categoryCreated": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "drik"
          },
          "description": {
            "type": "string",
            "example": "cold drik"
          }
        }
      },
      "productCreate": {
        "required": [
          "name",
          "code",
          "description",
          "categoryId",
          "price"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "beer"
          },
          "code": {
            "type": "string",
            "example": "bear-1"
          },
          "categoryId": {
            "type": "integer",
            "example": 1
          },
          "price": {
            "type": "number",
            "example": 10
          },
          "image": {
            "type": "string",
            "example": "ssssss"
          },
          "description": {
            "type": "string",
            "example": "cold beer"
          }
        }
      },
      "productCreated": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "beer"
          },
          "code": {
            "type": "string",
            "example": "bear-1"
          },
          "categoryId": {
            "type": "integer",
            "example": 1
          },
          "price": {
            "type": "number",
            "example": 10
          },
          "image": {
            "type": "string",
            "example": "ssssss"
          },
          "description": {
            "type": "string",
            "example": "cold beer"
          }
        }
      },
      "Products": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "name": {
              "type": "string",
              "example": "beer"
            },
            "code": {
              "type": "string",
              "example": "bear-1"
            },
            "categoryId": {
              "type": "integer",
              "example": 1
            },
            "price": {
              "type": "number",
              "example": 10
            },
            "image": {
              "type": "string",
              "example": "ssssss"
            },
            "description": {
              "type": "string",
              "example": "cold beer"
            }
          }
        }
      }
    }
  }
}